
name: test_windows_dockerfile

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  USERNAME: ssh
  CONTAINER_SSH_PORT: 22
  RUNNER_HOST_SSH_PORT: 22
  TEST_ENV_VAR: TEST_MESSAGE

jobs:




  build_and_test:
    name: "Build and test ssh-server in Windows Docker container, using Python script."
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v4

        
    # - name: "Cache the Docker image"
    #   uses: ScribeMD/docker-cache@0.3.7
    #   with:
    #     key: docker-${{ runner.os }}-${{ hashFiles('./Dockerfile') }}
        

    # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
    - id: sets-password
      name: Generate password
      run: |
        python print_password_to_.py >> "$GITHUB_OUTPUT"
      # the_secret=$((RANDOM))
      # echo "::add-mask::$the_secret"
      # echo "secret-number=$the_secret" >> "$GITHUB_OUTPUT"
    - name: Print the password
      run: |
        echo "Log on with username: ${{ env.USERNAME }} and password: ${{ steps.sets-password.outputs.password }}"

    - name: "Build the Windows Dockerfile" 
      run: >
        docker build 
        -t 
        --build-arg USERNAME=${{ env.USERNAME }}
        --build-arg PASSWORD=${{ steps.sets-password.outputs.password }}
        --build-arg PORT=${{ env.CONTAINER_SSH_PORT }}
        powershell_windows_ssh_server .

    - name: "Run the Windows Docker image" 
      # run: docker run --rm -d -p 22:22 --name ssh_server powershell_windows_ssh_server
      # run: docker run --rm -d --name ssh_server --volume ${{ github.workspace }}:c:\OpenSSH-Win64\  powershell_windows_ssh_server
      # " 
      # WARNING 
      # It is not recommended to use build-time variables for passing secrets 
      # like GitHub keys, user credentials etc. Build-time variable values are 
      # visible to any user of the image with the docker history command.

      # Refer to the RUN --mount=type=secret section to learn about secure ways 
      # to use secrets when building images.  
      # "
      # https://docs.docker.com/engine/reference/builder/#arg
      run: > 
        docker run 
        --rm 
        -d 
        -p ${{ env.RUNNER_HOST_SSH_PORT }}:${{ env.CONTAINER_SSH_PORT }} 
        --env ${{ env.TEST_ENV_VAR }}=Hello_World_from_container_ssh_server
        --name ssh_server 
        powershell_windows_ssh_server
        


    - uses: actions/setup-python@v5
      # with:
      #   python-version: '3.10' 
    - run: pip install fabric
    - name: "Read the test message in the container via paramiko, and the SSH server, from outside the container"
      run: >
        python 
        ssh_from_outside_container.py 
        ${{ env.USERNAME }} 
        ${{ steps.sets-password.outputs.password }}
        ${{ env.RUNNER_HOST_SSH_PORT }} 
        ${{ env.TEST_ENV_VAR }}


